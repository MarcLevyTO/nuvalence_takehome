[{"/Users/marclevy/Projects/Coding Challenges/nuvalence/src/index.js":"1","/Users/marclevy/Projects/Coding Challenges/nuvalence/src/reportWebVitals.js":"2","/Users/marclevy/Projects/Coding Challenges/nuvalence/src/_services/index.js":"3","/Users/marclevy/Projects/Coding Challenges/nuvalence/src/_services/userService.js":"4","/Users/marclevy/Projects/Coding Challenges/nuvalence/src/App/index.js":"5","/Users/marclevy/Projects/Coding Challenges/nuvalence/src/_helpers/index.js":"6","/Users/marclevy/Projects/Coding Challenges/nuvalence/src/_helpers/history.js":"7","/Users/marclevy/Projects/Coding Challenges/nuvalence/src/components/AddressBook/index.js":"8","/Users/marclevy/Projects/Coding Challenges/nuvalence/src/App/App.js":"9","/Users/marclevy/Projects/Coding Challenges/nuvalence/src/components/AddressBook/AddressBook.js":"10","/Users/marclevy/Projects/Coding Challenges/nuvalence/src/components/AddressBook/UserList.js":"11","/Users/marclevy/Projects/Coding Challenges/nuvalence/src/components/AddressBook/UserDetails.js":"12","/Users/marclevy/Projects/Coding Challenges/nuvalence/src/components/AddressBook/styled.js":"13"},{"size":529,"mtime":1609109230254,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1608867392716,"results":"16","hashOfConfig":"15"},{"size":30,"mtime":1609099120929,"results":"17","hashOfConfig":"15"},{"size":535,"mtime":1609109065805,"results":"18","hashOfConfig":"15"},{"size":22,"mtime":1609108116776,"results":"19","hashOfConfig":"15"},{"size":26,"mtime":1609109307468,"results":"20","hashOfConfig":"15"},{"size":96,"mtime":1609109309343,"results":"21","hashOfConfig":"15"},{"size":29,"mtime":1609109661939,"results":"22","hashOfConfig":"15"},{"size":460,"mtime":1609110733796,"results":"23","hashOfConfig":"15"},{"size":1282,"mtime":1609112913236,"results":"24","hashOfConfig":"15"},{"size":900,"mtime":1609115697207,"results":"25","hashOfConfig":"15"},{"size":867,"mtime":1609114502240,"results":"26","hashOfConfig":"15"},{"size":417,"mtime":1609114594708,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1hhkfak",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/marclevy/Projects/Coding Challenges/nuvalence/src/index.js",[],["58","59"],"/Users/marclevy/Projects/Coding Challenges/nuvalence/src/reportWebVitals.js",[],"/Users/marclevy/Projects/Coding Challenges/nuvalence/src/_services/index.js",[],"/Users/marclevy/Projects/Coding Challenges/nuvalence/src/_services/userService.js",[],["60","61"],"/Users/marclevy/Projects/Coding Challenges/nuvalence/src/App/index.js",[],"/Users/marclevy/Projects/Coding Challenges/nuvalence/src/_helpers/index.js",[],"/Users/marclevy/Projects/Coding Challenges/nuvalence/src/_helpers/history.js",[],"/Users/marclevy/Projects/Coding Challenges/nuvalence/src/components/AddressBook/index.js",[],"/Users/marclevy/Projects/Coding Challenges/nuvalence/src/App/App.js",[],"/Users/marclevy/Projects/Coding Challenges/nuvalence/src/components/AddressBook/AddressBook.js",["62","63","64"],"import React, { useState, useEffect } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport UserList from './UserList';\nimport UserDetail from './UserDetails';\n\nimport { userService } from '../../_services';\n\nimport { StyledAddressBook } from './styled';\n\nfunction AddressBook() {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n\n  const [hasError, setHasError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // Load users\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let users = await userService.loadUsers();\n        setUsers(users);\n        setUser(users[0]);\n      } catch (error) {\n        setErrorMessage(error.message);\n        setHasError(true);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      { hasError &&\n        <Alert variant=\"danger\">\n          { errorMessage }\n        </Alert>\n      }\n      { !hasError && \n          <StyledAddressBook>\n            <UserList users={users} setUser={setUser} />\n            <UserDetail user={user} />\n          </StyledAddressBook>\n      }\n    </>\n  );\n}\n\nexport { AddressBook };\n","/Users/marclevy/Projects/Coding Challenges/nuvalence/src/components/AddressBook/UserList.js",[],"/Users/marclevy/Projects/Coding Challenges/nuvalence/src/components/AddressBook/UserDetails.js",["65"],"import React from \"react\";\n\nimport { StyledDetails } from './styled';\n\nconst UserDetail = ({ user }) => {\n  return (\n    <StyledDetails>\n      { user && user?.name &&\n          <div>\n            <img src={user.picture.large} />\n\n            <h1>{user.name.first} {user.name.last}</h1>\n            \n            <b>email</b>\n            <p>{user.email}</p>\n\n            <b>username</b>\n            <p>{user.login.username}</p>\n\n            <b>phone</b>\n            <p>{user.phone}</p>\n\n            <b>mobile</b>\n            <p>{user.cell}</p>\n\n            <b>location</b>\n            <p>{user.location?.street?.number} {user.location?.street?.name}</p>\n            <p>{user.location?.city}, {user.location?.state}, {user.location?.country}</p>\n            <p>{user.location?.postcode}</p>\n        </div>\n      }\n    </StyledDetails>\n  );\n};\n\nexport default UserDetail;\n","/Users/marclevy/Projects/Coding Challenges/nuvalence/src/components/AddressBook/styled.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"66","replacedBy":"70"},{"ruleId":"68","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":17},{"ruleId":"72","severity":1,"message":"76","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":11},{"ruleId":"72","severity":1,"message":"77","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":11},{"ruleId":"78","severity":1,"message":"79","line":10,"column":13,"nodeType":"80","endLine":10,"endColumn":45},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]